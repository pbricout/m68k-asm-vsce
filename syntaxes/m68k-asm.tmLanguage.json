{
  "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
  "name": "M68K Assembly",
  "scopeName": "source.m68k-asm",  "patterns": [
    {
      "include": "#comments"
    },
    {
      "include": "#sections"
    },
    {
      "include": "#macros"
    },
    {
      "include": "#conditionals"
    },
    {
      "include": "#strings"
    },
    {
      "include": "#directives"
    },
    {
      "include": "#instructions"
    },
    {
      "include": "#labels"
    },
    {
      "include": "#registers"
    },
    {
      "include": "#numbers"
    },
    {
      "include": "#operators"
    }
  ],
  "repository": {
    "comments": {
      "patterns": [
        {
          "name": "comment.line.semicolon.m68k-asm",
          "begin": ";",
          "end": "$"
        },
        {
          "name": "comment.block.m68k-asm",
          "begin": "/\\*",
          "end": "\\*/",
          "patterns": [
            {
              "name": "punctuation.definition.comment.begin.m68k-asm",
              "match": "/\\*"
            },
            {
              "name": "punctuation.definition.comment.end.m68k-asm",
              "match": "\\*/"
            }
          ]
        }
      ]
    },
    "sections": {
      "patterns": [
        {
          "name": "meta.section.m68k-asm",
          "begin": "\\b(?i)(section|bss|data|text)\\b",
          "beginCaptures": {
            "1": { "name": "keyword.control.section.begin.m68k-asm" }
          },
          "end": "(?=\\b(?i)(section|bss|data|text)\\b)",
          "endCaptures": {
            "1": { "name": "keyword.control.section.end.m68k-asm" }
          }
        }
      ]
    },
    "macros": {
      "patterns": [
        {
          "name": "meta.macro.m68k-asm",
          "begin": "\\b(?i)(macro)\\b",
          "beginCaptures": {
            "1": { "name": "keyword.control.macro.begin.m68k-asm" }
          },
          "end": "\\b(?i)(endm)\\b",
          "endCaptures": {
            "1": { "name": "keyword.control.macro.end.m68k-asm" }
          }
        }
      ]
    },
    "conditionals": {
      "patterns": [
        {
          "name": "meta.if.block.m68k-asm",
          "begin": "\\b(?i)(if)\\b",
          "beginCaptures": {
            "1": { "name": "keyword.control.conditional.begin.m68k-asm" }
          },
          "end": "\\b(?i)(endif)\\b",
          "endCaptures": {
            "1": { "name": "keyword.control.conditional.end.m68k-asm" }
          },
          "patterns": [
            {
              "include": "$self"
            }
          ]
        }
      ]
    },
    "labels": {
      "patterns": [
        {
          "name": "entity.name.function.m68k-asm",
          "match": "^\\s*([A-Za-z_][A-Za-z0-9_]*)\\s*:"
        },
        {
          "name": "entity.name.function.m68k-asm",
          "match": "^\\s*([A-Za-z_][A-Za-z0-9_]*)\\b(?!\\s*(:|equ|dc|ds|dcb|even|align|include|incbin|macro|endm|if|else|endif|section|text|data|bss|move|movea|movem|movep|moveq|exg|lea|pea|swap|add|adda|addi|addq|addx|sub|suba|subi|subq|subx|muls|mulu|divs|divu|neg|negx|clr|ext|abcd|sbcd|nbcd|and|andi|or|ori|eor|eori|not|asl|asr|lsl|lsr|rol|ror|roxl|roxr|cmp|cmpa|cmpi|cmpm|tst|bra|bsr|bcc|bcs|beq|bne|bge|bgt|ble|blt|bhi|bls|bpl|bmi|bvc|bvs|jmp|jsr|rts|rtr|rte|scc|scs|seq|sne|sge|sgt|sle|slt|shi|sls|spl|smi|svc|svs|st|sf|trap|trapv|chk|stop|reset|nop|illegal)\\b)"
        }
      ]
    },
    "registers": {
      "patterns": [
        {
          "name": "variable.other.register.m68k-asm",
          "match": "\\b[A-Za-z][A-Za-z0-9]*\\b"
        }
      ]
    },
    "numbers": {
      "patterns": [
        {
          "name": "constant.numeric.m68k-asm",
          "match": "\\b(0x[0-9A-Fa-f]+|[0-9]+)\\b"
        }
      ]
    },
    "operators": {
      "patterns": [
        {
          "name": "keyword.operator.m68k-asm",
          "match": "[+\\-*/&|^%=<>!~]"
        }
      ]
    },
    "strings": {
      "patterns": [
        {
          "name": "string.quoted.double.m68k-asm",
          "begin": "\"",
          "end": "\"",
          "patterns": [
            {
              "name": "constant.character.escape.m68k-asm",
              "match": "\\\\."
            }
          ]
        },
        {
          "name": "string.quoted.single.m68k-asm",
          "begin": "'",
          "end": "'",
          "patterns": [
            {
              "name": "constant.character.escape.m68k-asm",
              "match": "\\\\."
            }
          ]
        }
      ]
    },
    "directives": {
      "patterns": [
        {
          "name": "meta.directive.m68k-asm",
          "begin": "\\b(?i)(include|macro|endm|if|else|endif|section|text|data|bss)\\b",
          "beginCaptures": {
            "1": { "name": "keyword.control.directive.begin.m68k-asm" }
          },
          "end": "(?=\\b(?i)(include|macro|endm|if|else|endif|section|text|data|bss)\\b)",
          "endCaptures": {
            "1": { "name": "keyword.control.directive.end.m68k-asm" }
          }
        }
      ]
    },
    "instructions": {
      "patterns": [
        {
          "name": "support.function.m68k-asm",
          "match": "\\b(?i)(move|movea|movem|movep|moveq|exg|lea|pea|swap|add|adda|addi|addq|addx|sub|suba|subi|subq|subx|muls|mulu|divs|divu|neg|negx|clr|ext|abcd|sbcd|nbcd|and|andi|or|ori|eor|eori|not|asl|asr|lsl|lsr|rol|ror|roxl|roxr|cmp|cmpa|cmpi|cmpm|tst|bra|bsr|bcc|bcs|beq|bne|bge|bgt|ble|blt|bhi|bls|bpl|bmi|bvc|bvs|jmp|jsr|rts|rtr|rte|scc|scs|seq|sne|sge|sgt|sle|slt|shi|sls|spl|smi|svc|svs|st|sf|trap|trapv|chk|stop|reset|nop|illegal)\\b"
        }
      ]
    }
  }
}